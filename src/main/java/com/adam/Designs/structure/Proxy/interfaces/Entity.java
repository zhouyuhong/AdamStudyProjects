package com.adam.Designs.structure.Proxy.interfaces;
/**
 * 代理模式
 * 代理模式实质我们已经很熟悉了，AOP就是采用的这种思想
 * 大致就是我们自己在本地定义一个原对象的代理对象，以防止我们直接操作原对象，这样的好处是防止原对象开销过大导致的内存溢出或者安全性被破坏
 * 代理模式大致使用在如下几个地方：
 * 1.远程代理，即我们在本地创建一个远程对象的代理对象，这样我们每次就只需要访问本地对象即可
 * 2.虚代理，如果原对象的内存开销过大，我们就能代理一个原对象的简单对象，这个对象可能只有原对象的部分功能，但是不影响我们使用，同时也降低了内存的开销
 * 3.保护代理，即给原对象添加一个保护代理，通过一定的权限验证，才能访问原对象，增强了安全性
 * 4.增强代理，即我们希望在原对象的某个方法基础上进行我们的特殊方法，就可以使用代理模式
 * @author adam
 * 2015.5.19
 */

//这里我们用增强代理的方式来讲解
public interface Entity {

	//这就是原对象接口，内部只有一个方法
	public void sayHello();
	
}
